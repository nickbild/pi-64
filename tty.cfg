#### COLORS ####

In ~/.bashrc:

if [ "$TERM" = "linux" ]; then
    echo -en "\e]P0483AAA" # DARK BLUE 
    echo -en "\e]P2867ADE" # LIGHT BLUE
    echo -en "\e]P384C5CC" # CYAN
    clear #for background artifacting
fi

#### BANNER ####

#### OFFSET ####

tmux.sh

#### BORDER ####

cat /dev/urandom >/dev/fb0


#!/usr/bin/env bash

fbdev=/dev/fb0 ;   width=1280 ; bpp=4
color="\x00\x00\xFF\x00" #red colored

function pixel()
{  xx=$1 ; yy=$2
   printf "$color" | dd bs=$bpp seek=$(($yy * $width + $xx)) \
                        of=$fbdev &>/dev/null
}
x=0 ; y=0 ; clear
for i in {1..500}; do
   pixel $((x++)) $((y++))
done


****
where function 'pixel' should be an answer... write a pixel to screen by changing byte values (blue-green-red-alpha) on x-y offset of device /dev/fbX which is frame buffer for the video-card.

or try one liner pixel draw (yellow on x:y=200:100, if width is 1024):

printf "\x00\xFF\xFF\x00" | dd bs=4 seek=$((100 * 1024 + 200)) >/dev/fb0
